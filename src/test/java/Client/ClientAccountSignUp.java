package Client;
import java.io.IOException;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import Page_Objects.ClientSignUp;
import Resource_Properties.Base_File;

public class ClientAccountSignUp extends Base_File
{

	@BeforeMethod
	public void initialize() throws IOException
	{
		driver = initializeBrowser();
		driver.get(pro.getProperty("urlWith_Term"));
	}
	
	@Test(priority=1)
	public void SignUp_AccountCreationWith_NoPackage()
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Brie");
		a.LastName().sendKeys("Johnsson");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4526534563");
		a.DOB().sendKeys("09061994");
		a.selectGender().click();
		a.Female().click();
		a.Address1().sendKeys("Highland Street 120");
		a.City().sendKeys("Atlanta");
		a.State().click();
		a.Georgia().click();
		a.Zip().sendKeys("30303");
		a.eFirstName().sendKeys("Alex");
		a.eLastName().sendKeys("Johnsson");
		a.eEmail().sendKeys("alex.johnsson@gmail.com");
		a.ePhoneNo().sendKeys("4625676548");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		a.skipPurchasePackageLater().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.skipPackage_waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Rose Lavelle");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Rose Lavelle");
		a.SaveAndContinue4().click();
		Assert.assertEquals(a.confirmFirstName().getText(), "Brie");
		Assert.assertEquals(a.confirmLastName().getText(), "Johnsson");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4526534563");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 120");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Alex");
		Assert.assertEquals(a.confirmELastName().getText(), "Johnsson");
		Assert.assertEquals(a.confirmEEmail().getText(), "alex.johnsson@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4625676548");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		a.Confirm().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(),"Congratulations! Your account has been created.");
		a.Login().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+"+randomInt+"@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.dontHaveAPackageMessage().getText(), "You don't have a package on file for this session.\n"+"Would you like to purchase a new package?");	
	}
	
	@Test(priority=2)
	public void SignUp_AccountCreationWith_FreeTrailPack()
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Jennifer");
		a.LastName().sendKeys("Lawrence");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4624565674");
		a.DOB().sendKeys("03091994");
		a.selectGender().click();
		a.Female().click();
		a.Address1().sendKeys("Highland Street 140");
		a.City().sendKeys("Atlanta");
		a.State().click();
		a.Georgia().click();
		a.Zip().sendKeys("30303");
		a.eFirstName().sendKeys("Anne");
		a.eLastName().sendKeys("Lawrence");
		a.eEmail().sendKeys("anne.lawrence@gmail.com");
		a.ePhoneNo().sendKeys("4626456842");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		Assert.assertEquals(a.zero$classPack_Name().getText(), "Free Yoga Trail Session Pack");
		Assert.assertEquals(a.zero$classPack_Price().getText(), "$0.00");
		Assert.assertEquals(a.zero$classPack_Expiry().getText(), "Valid thru 1 Year from Date of Purchase");
		a.zero$classPack().click();
		a.SaveAndContinue2().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Crystal Dunn");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Crystal Dunn");
		a.SaveAndContinue4().click();
		Assert.assertEquals(a.confirmFirstName().getText(), "Jennifer");
		Assert.assertEquals(a.confirmLastName().getText(), "Lawrence");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4624565674");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 140");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Anne");
		Assert.assertEquals(a.confirmELastName().getText(), "Lawrence");
		Assert.assertEquals(a.confirmEEmail().getText(), "anne.lawrence@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4626456842");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		Assert.assertEquals(a.confirmPackageName().getText(), "Free Yoga Trail Session Pack");
		Assert.assertEquals(a.confirmPriceOnClassPack().getText(), "$0.00");
		Assert.assertEquals(a.confirmExpiryOnClassPack().getText(), "Valid thru 1 Year from Date of Purchase");
		Assert.assertEquals(a.confirmPrice().getText(), "$0.00");
		Assert.assertEquals(a.actualGrandTotalName().getText(), "Grand Total");
		Assert.assertEquals(a.actualGrandTotalAmount().getText(), "$0.00");
		a.Confirm().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(),"Congratulations! Your account has been created.");
		a.Login().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+"+randomInt+"@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.sessionSignedUpMessage().getText(), "You have been registered for this session!");
		Assert.assertTrue(a.cancelSession().isDisplayed());
		Assert.assertTrue(a.sessionModalShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.sessionOnCalendarShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.packageStatus().getText().contains("1/"));	
	}
	
	@Test(priority=3)
	public void SignUp_AccountCreationWith_PurchaseClassPack() 
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Alexandra");
		a.LastName().sendKeys("Daddario");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4825434121");
		a.Address1().sendKeys("Highland Street 120");
		a.City().sendKeys("Atlanta");
		a.DOB().sendKeys("09091995");
		a.selectGender().click();
		a.Female().click();
		a.Zip().sendKeys("30303");
		a.State().click();
		a.Georgia().click();
		a.eFirstName().sendKeys("Nina");
		a.eLastName().sendKeys("Daddario");
		a.eEmail().sendKeys("nina.daddario@gmail.com");
		a.ePhoneNo().sendKeys("4853453412");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		Assert.assertEquals(a.$classPack_Name().getText(), "Yoga Session Pack");
		Assert.assertEquals(a.$classPack_Price().getText(), "$1.50");
		Assert.assertEquals(a.$classPack_Expiry().getText(), "Valid thru 1 Year from Date of Purchase");
		a.$classPack().click();
		a.SaveAndContinue2().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Sophia Huerta");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Sophia Huerta");
		a.SaveAndContinue4().click();
		Assert.assertEquals(a.confirmFirstName().getText(), "Alexandra");
		Assert.assertEquals(a.confirmLastName().getText(), "Daddario");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4825434121");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 120");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Nina");
		Assert.assertEquals(a.confirmELastName().getText(), "Daddario");
		Assert.assertEquals(a.confirmEEmail().getText(), "nina.daddario@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4853453412");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		Assert.assertEquals(a.confirmPackageName().getText(), "Yoga Session Pack");
		Assert.assertEquals(a.confirmPriceOnClassPack().getText(), "$1.50");
		Assert.assertEquals(a.confirmExpiryOnClassPack().getText(), "Valid thru 1 Year from Date of Purchase");
		Assert.assertEquals(a.confirmPrice().getText(), "$1.50");
		Assert.assertEquals(a.actualGrandTotalName().getText(), "Grand Total");
		Assert.assertEquals(a.actualGrandTotalAmount().getText(), "$1.50");
		a.promoCode().sendKeys("yog247");
		a.promoCodeApply().click();
		Assert.assertEquals(a.promoCodeAppliedMessage().getText(), "Your promo code has been applied successfully!");
		Assert.assertEquals(a.promoCodeName().getText(), "Promo-(yog247)");
		Assert.assertEquals(a.promoCodeAmount().getText(), "-$0.50");
		Assert.assertEquals(a.grandTotalNameAfterDiscount().getText(), "Grand Total");
		Assert.assertEquals(a.grandTotalAmountAfterDiscount().getText(), "$1.00");
		a.sameAsClientDetails().click();
		Assert.assertEquals(a.cardHolderFirstName().getAttribute("value"), "Alexandra");
		Assert.assertEquals(a.cardHolderLastName().getAttribute("value"), "Daddario");
		Assert.assertEquals(a.cardHolderEmail().getAttribute("value"), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.cardHolderAddress().getAttribute("value"), "Highland Street 120");
		Assert.assertEquals(a.cardHolderCity().getAttribute("value"), "Atlanta");
		Assert.assertEquals(a.cardHolderZip().getAttribute("value"), "30303");
		a.EnterCreditCardNo().sendKeys("378282246310005");
		a.EnterExpiryDate().sendKeys("0224");
		a.EnterCVV().sendKeys("4391");
		a.Confirm_pay().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(),"Congratulations! Your account has been created.");
		a.Login_afterPay().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+"+randomInt+"@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.sessionSignedUpMessage().getText(), "You have been registered for this session!");
		Assert.assertTrue(a.cancelSession().isDisplayed());
		Assert.assertTrue(a.sessionModalShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.sessionOnCalendarShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.packageStatus().getText().contains("1/"));
	}
	
	@Test(priority=4)
	public void SignUp_AccountCreationWith_PurchaseMemPack()
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Elizabeth");
		a.LastName().sendKeys("Olsen");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4805434121");
		a.DOB().sendKeys("09091995");
		a.selectGender().click();
		a.Female().click();
		a.Address1().sendKeys("Highland Street 150");
		a.City().sendKeys("Atlanta");
		a.State().click();
		a.Georgia().click();
		a.Zip().sendKeys("30303");
		a.eFirstName().sendKeys("Natalie");
		a.eLastName().sendKeys("Olsen");
		a.eEmail().sendKeys("natalie.olsen@gmail.com");
		a.ePhoneNo().sendKeys("4853453412");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		Assert.assertEquals(a.xSessionsMemPack_Name().getText(), "1 Year Pilates Membership Pack");
		Assert.assertEquals(a.xSessionsMemPack_Price().getText(), "$2.00");
		Assert.assertEquals(a.xSessionsMemPack_AutoPayInterval().getText(), "Per Month");
		a.xSessionsMemPack().click();
		a.SaveAndContinue2().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Ashley Sanchez");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Ashley Sanchez");
		a.SaveAndContinue4().click();	
		Assert.assertEquals(a.confirmFirstName().getText(), "Elizabeth");
		Assert.assertEquals(a.confirmLastName().getText(), "Olsen");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4805434121");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 150");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Natalie");
		Assert.assertEquals(a.confirmELastName().getText(), "Olsen");
		Assert.assertEquals(a.confirmEEmail().getText(), "natalie.olsen@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4853453412");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		Assert.assertEquals(a.confirmPackageName().getText(), "1 Year Pilates Membership Pack");
		Assert.assertEquals(a.confirmPriceOnMemPack().getText(), "$2.00");
		Assert.assertEquals(a.confirmAutoPayIntervalOnMemPack().getText(), "Per Month");
		Assert.assertEquals(a.confirmPrice().getText(), "$2.00");
		Assert.assertEquals(a.actualGrandTotalName().getText(), "Grand Total");
		Assert.assertEquals(a.actualGrandTotalAmount().getText(), "$2.00");
		a.promoCode().sendKeys("mempack23");
		a.promoCodeApply().click();
		Assert.assertEquals(a.promoCodeAppliedMessage().getText(), "Your promo code has been applied successfully!");
		Assert.assertEquals(a.promoCodeName().getText(), "Promo-(mempack23)");
		Assert.assertEquals(a.promoCodeAmount().getText(), "-$0.80");
		Assert.assertEquals(a.grandTotalNameAfterDiscount().getText(), "Grand Total");
		Assert.assertEquals(a.grandTotalAmountAfterDiscount().getText(), "$1.20");		
		a.sameAsClientDetails().click();
		Assert.assertEquals(a.cardHolderFirstName().getAttribute("value"), "Elizabeth");
		Assert.assertEquals(a.cardHolderLastName().getAttribute("value"), "Olsen");
		Assert.assertEquals(a.cardHolderEmail().getAttribute("value"), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.cardHolderAddress().getAttribute("value"), "Highland Street 150");
		Assert.assertEquals(a.cardHolderCity().getAttribute("value"), "Atlanta");
		Assert.assertEquals(a.cardHolderZip().getAttribute("value"), "30303");
		a.EnterCreditCardNo().sendKeys("378282246310005");
		a.EnterExpiryDate().sendKeys("0224");
		a.EnterCVV().sendKeys("4391");
		a.agreeToChargeMonthlyCheckbox().click();
		a.Confirm_pay().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(),"Congratulations! Your account has been created.");
		a.Login_afterPay().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+"+randomInt+"@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.sessionSignedUpMessage().getText(), "You have been registered for this session!");
		Assert.assertTrue(a.cancelSession().isDisplayed());
		Assert.assertTrue(a.sessionModalShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.sessionOnCalendarShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.packageStatus().getText().contains("1/"));
	}
	
	@Test(priority=5)
	public void SignUp_AccountCreationWith_PurchaseUnlimitedMem()
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Matthew");
		a.LastName().sendKeys("McConaughey");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4567765420");
		a.DOB().sendKeys("09301994");
		a.selectGender().click();
		a.Male().click();
		a.Address1().sendKeys("Highland Street 140");
		a.City().sendKeys("Atlanta");
		a.State().click();
		a.Georgia().click();
		a.Zip().sendKeys("30303");
		a.eFirstName().sendKeys("Alex");
		a.eLastName().sendKeys("McConaughey");
		a.eEmail().sendKeys("alex.mcconaughey@gmail.com");
		a.ePhoneNo().sendKeys("4567876545");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		Assert.assertEquals(a.unlimitedMemPack_Name().getText(), "1 Year Unlimited Membership Package");
		Assert.assertEquals(a.unlimitedMemPack_Price().getText(), "$1.00");
		Assert.assertEquals(a.unlimitedMemPack_AutoPayInterval().getText(), "Per Month");
		a.unlimitedMemPack().click();
		a.SaveAndContinue2().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Morgan Freeman");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Morgan Freeman");
		a.SaveAndContinue4().click();
		Assert.assertEquals(a.confirmFirstName().getText(), "Matthew");
		Assert.assertEquals(a.confirmLastName().getText(), "McConaughey");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4567765420");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 140");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Alex");
		Assert.assertEquals(a.confirmELastName().getText(), "McConaughey");
		Assert.assertEquals(a.confirmEEmail().getText(), "alex.mcconaughey@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4567876545");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		Assert.assertEquals(a.confirmPackageName().getText(), "1 Year Unlimited Membership Package");
		Assert.assertEquals(a.confirmPriceOnMemPack().getText(), "$1.00");
		Assert.assertEquals(a.confirmAutoPayIntervalOnMemPack().getText(), "Per Month");
		Assert.assertEquals(a.confirmPrice().getText(), "$1.00");
		Assert.assertEquals(a.actualGrandTotalName().getText(), "Grand Total");
		Assert.assertEquals(a.actualGrandTotalAmount().getText(), "$1.00");
		a.promoCode().sendKeys("mempack23");
		a.promoCodeApply().click();
		Assert.assertEquals(a.promoCodeAppliedMessage().getText(), "Your promo code has been applied successfully!");
		Assert.assertEquals(a.promoCodeName().getText(), "Promo-(mempack23)");
		Assert.assertEquals(a.promoCodeAmount().getText(), "-$0.40");
		Assert.assertEquals(a.grandTotalNameAfterDiscount().getText(), "Grand Total");
		Assert.assertEquals(a.grandTotalAmountAfterDiscount().getText(), "$0.60");	
		a.sameAsClientDetails().click();
		Assert.assertEquals(a.cardHolderFirstName().getAttribute("value"), "Matthew");
		Assert.assertEquals(a.cardHolderLastName().getAttribute("value"), "McConaughey");
		Assert.assertEquals(a.cardHolderEmail().getAttribute("value"), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.cardHolderAddress().getAttribute("value"), "Highland Street 140");
		Assert.assertEquals(a.cardHolderCity().getAttribute("value"), "Atlanta");
		Assert.assertEquals(a.cardHolderZip().getAttribute("value"), "30303");
		a.EnterCreditCardNo().sendKeys("378282246310005");
		a.EnterExpiryDate().sendKeys("0224");
		a.EnterCVV().sendKeys("1204");
		a.agreeToChargeMonthlyCheckbox().click();
		a.Confirm_pay().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(),"Congratulations! Your account has been created.");
		a.Login_afterPay().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+"+randomInt+"@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.sessionSignedUpMessage().getText(), "You have been registered for this session!");
		Assert.assertTrue(a.cancelSession().isDisplayed());
		Assert.assertTrue(a.sessionModalShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.sessionOnCalendarShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.packageStatus().getText().contains("1/"));	
	}
	
	@Test(priority=6)
	public void SignUp_AccountCreationWith_FreeFirstMonthMemPack()
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Julianne");
		a.LastName().sendKeys("Moore");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4565434567");
		a.DOB().sendKeys("09301994");
		a.selectGender().click();
		a.GenderVariant().click();
		a.Address1().sendKeys("Highland Street 120");
		a.City().sendKeys("Atlanta");
		a.State().click();
		a.Georgia().click();
		a.Zip().sendKeys("30303");
		a.eFirstName().sendKeys("Odette");
		a.eLastName().sendKeys("Moore");
		a.eEmail().sendKeys("odette.moore@gmail.com");
		a.ePhoneNo().sendKeys("4567645674");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		Assert.assertEquals(a.freeFirstMonthMemPack_Name().getText(), "Free First Month Membership Package");
		Assert.assertEquals(a.freeFirstMonthMemPack_Price().getText(), "$1.00");
		Assert.assertEquals(a.freeFirstMonthMemPack_AutoPayInterval().getText(), "Per Month");
		a.freeFirstMonthMemPack().click();
		a.SaveAndContinue2().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Betty White");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Betty White");
		a.SaveAndContinue4().click();
		Assert.assertEquals(a.confirmFirstName().getText(), "Julianne");
		Assert.assertEquals(a.confirmLastName().getText(), "Moore");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4565434567");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 120");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Odette");
		Assert.assertEquals(a.confirmELastName().getText(), "Moore");
		Assert.assertEquals(a.confirmEEmail().getText(), "odette.moore@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4567645674");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		Assert.assertEquals(a.confirmPackageName().getText(), "Free First Month Membership Package");
		Assert.assertEquals(a.confirmPriceOnMemPack().getText(), "$1.00");
		Assert.assertEquals(a.confirmAutoPayIntervalOnMemPack().getText(), "Per Month");
		Assert.assertEquals(a.confirmPrice().getText(), "$1.00");
		Assert.assertEquals(a.actualGrandTotalName().getText(), "Grand Total");
		Assert.assertEquals(a.actualGrandTotalAmount().getText(), "$0.00");
		a.sameAsClientDetails().click();
		Assert.assertEquals(a.cardHolderFirstName().getAttribute("value"), "Julianne");
		Assert.assertEquals(a.cardHolderLastName().getAttribute("value"), "Moore");
		Assert.assertEquals(a.cardHolderEmail().getAttribute("value"), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.cardHolderAddress().getAttribute("value"), "Highland Street 120");
		Assert.assertEquals(a.cardHolderCity().getAttribute("value"), "Atlanta");
		Assert.assertEquals(a.cardHolderZip().getAttribute("value"), "30303");
		a.EnterCreditCardNo().sendKeys("378282246310005");
		a.EnterExpiryDate().sendKeys("0224");
		a.EnterCVV().sendKeys("1041");
		a.agreeToChargeMonthlyCheckbox().click();
		a.Confirm_pay().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(), "Congratulations! Your account has been created.");	
		a.Login_afterPay().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+"+randomInt+"@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.sessionSignedUpMessage().getText(), "You have been registered for this session!");
		Assert.assertTrue(a.cancelSession().isDisplayed());
		Assert.assertTrue(a.sessionModalShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.sessionOnCalendarShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.packageStatus().getText().contains("1/"));
	}
	
	@Test(priority=7)
	public void SignUp_AccountCreationWith_PurchaseClassAndMemPack()
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Elle");
		a.LastName().sendKeys("Fanning");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4825434121");
		a.DOB().sendKeys("09091995");
		a.selectGender().click();
		a.PreferNotDisclose().click();
		a.Address1().sendKeys("Highland Street 125");
		a.City().sendKeys("Atlanta");
		a.State().click();
		a.Georgia().click();
		a.Zip().sendKeys("30303");
		a.eFirstName().sendKeys("Emilia");
		a.eLastName().sendKeys("Fanning");
		a.eEmail().sendKeys("emilia.fanning@gmail.com");
		a.ePhoneNo().sendKeys("4253453412");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		Assert.assertEquals(a.$classPack_Name().getText(), "Yoga Session Pack");
		Assert.assertEquals(a.$classPack_Price().getText(), "$1.50");
		Assert.assertEquals(a.$classPack_Expiry().getText(), "Valid thru 1 Year from Date of Purchase");
		a.$classPack().click();
		Assert.assertEquals(a.xSessionsMemPack_Name().getText(), "1 Year Pilates Membership Pack");
		Assert.assertEquals(a.xSessionsMemPack_Price().getText(), "$2.00");
		Assert.assertEquals(a.xSessionsMemPack_AutoPayInterval().getText(), "Per Month");
		a.xSessionsMemPack().click();
		a.SaveAndContinue2().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Anne Hathaway");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Anne Hathaway");
		a.SaveAndContinue4().click();
		Assert.assertEquals(a.confirmFirstName().getText(), "Elle");
		Assert.assertEquals(a.confirmLastName().getText(), "Fanning");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4825434121");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 125");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Emilia");
		Assert.assertEquals(a.confirmELastName().getText(), "Fanning");
		Assert.assertEquals(a.confirmEEmail().getText(), "emilia.fanning@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4253453412");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		Assert.assertEquals(a.actualGrandTotalName_ClassAndMem().getText(), "Grand Total");
		Assert.assertEquals(a.actualGrandTotalAmount_ClassAndMem().getText(), "$3.50");
		a.promoCode().sendKeys("mempack23");
		a.promoCodeApply().click();
		Assert.assertEquals(a.promoCodeAppliedMessage().getText(), "Your promo code has been applied successfully!");
		Assert.assertEquals(a.promoCodeName_ClassAndMem().getText(), "Promo-(mempack23)");
		Assert.assertEquals(a.promoCodeAmount_ClassAndMem().getText(), "-$0.80");
		Assert.assertEquals(a.grandTotalName_ClassAndMem_AfterDiscount().getText(), "Grand Total");
		Assert.assertEquals(a.grandTotalAmount_ClassAndMem_AfterDiscount().getText(), "$2.70");
		a.sameAsClientDetails().click();
		Assert.assertEquals(a.cardHolderFirstName().getAttribute("value"), "Elle");
		Assert.assertEquals(a.cardHolderLastName().getAttribute("value"), "Fanning");
		Assert.assertEquals(a.cardHolderEmail().getAttribute("value"), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.cardHolderAddress().getAttribute("value"), "Highland Street 125");
		Assert.assertEquals(a.cardHolderCity().getAttribute("value"), "Atlanta");
		Assert.assertEquals(a.cardHolderZip().getAttribute("value"), "30303");
		a.EnterCreditCardNo().sendKeys("378282246310005");
		a.EnterExpiryDate().sendKeys("0224");
		a.EnterCVV().sendKeys("4391");
		a.agreeToChargeMonthlyCheckbox().click();
		a.Confirm_pay().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(),"Congratulations! Your account has been created.");
		a.Login_afterPay().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+" + randomInt + "@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.sessionSignedUpMessage().getText(), "You have been registered for this session!");
		Assert.assertTrue(a.cancelSession().isDisplayed());
		Assert.assertTrue(a.sessionModalShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.sessionOnCalendarShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.packageStatus().getText().contains("1/"));	
	}	
	
	@Test(priority=8)
	public void SignUp_AccountCreationWith_PurchaseClassAndMemPack_ClassPackPromoCode()
	{
		ClientSignUp a = new ClientSignUp(driver);
		a.signUpLink().click();
		a.FirstName().sendKeys("Isabella");
		a.LastName().sendKeys("Fanning");
		String randomInt = a.Email();
		a.PhoneNo().sendKeys("4825434121");
		a.DOB().sendKeys("09091995");
		a.selectGender().click();
		a.PreferNotDisclose().click();
		a.Address1().sendKeys("Highland Street 120");
		a.City().sendKeys("Atlanta");
		a.State().click();
		a.Georgia().click();
		a.Zip().sendKeys("30303");
		a.eFirstName().sendKeys("Emma");
		a.eLastName().sendKeys("Fanning");
		a.eEmail().sendKeys("emma.fanning@gmail.com");
		a.ePhoneNo().sendKeys("4253453412");
		a.eRelationship().sendKeys("Sister");
		a.Password().sendKeys("Password@3");
		a.ConfirmPassword().sendKeys("Password@3");
		a.SaveAndContinue1().click();
		Assert.assertEquals(a.$classPack_Name().getText(), "Yoga Session Pack");
		Assert.assertEquals(a.$classPack_Price().getText(), "$1.50");
		Assert.assertEquals(a.$classPack_Expiry().getText(), "Valid thru 1 Year from Date of Purchase");
		a.$classPack().click();
		Assert.assertEquals(a.xSessionsMemPack_Name().getText(), "1 Year Pilates Membership Pack");
		Assert.assertEquals(a.xSessionsMemPack_Price().getText(), "$2.00");
		Assert.assertEquals(a.xSessionsMemPack_AutoPayInterval().getText(), "Per Month");
		a.xSessionsMemPack().click();
		a.SaveAndContinue2().click();
		Assert.assertEquals(a.waiverTerm1().getText(), "Each member who is age 13 and older will receive a membership card. This card is required to enter the facility. You must scan your card at the Front Desk each time you enter the facility.");
		a.waiverTerm1Checkbox().click();
		Assert.assertEquals(a.waiverTerm2().getText(), "All members will have a picture image on file to verify their identities. Members under the age of 13 must be accompanied by an adult and must be checked in at the Front Desk by giving their name.");
		a.waiverTerm2Checkbox().click();
		Assert.assertEquals(a.defaultWaiverTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.defaultWaiverTermCheckbox().click();
		a.waiverTypeFullName().sendKeys("Anne Hathaway");
		a.SaveAndContinue3().click();
		Assert.assertEquals(a.policiesTerm1().getText(), "It is the policy of the Office of Wellness Services and the Fitness Center to promote health and wellness while encouraging members to engage in safe conduct while participating in Wellness Services activities and events and while utilizing recreational facilities.");
		a.PoliciesTerm1Checkbox().click();
		Assert.assertEquals(a.policiesTerm2().getText(), "Accordingly, in addition to encouraging members to use good judgment, the Office of Wellness Services has adopted this policy and authorized the Fitness Center to approve rules designed to encourage safe behavior on the part of current members of the Fitness Center.");
		a.PoliciesTerm2Checkbox().click();
		Assert.assertEquals(a.policiesDefaultTerm().getText(), "By selecting \"I Accept\" using any device, means or action, you consent to the legally binding terms and conditions of this Agreement. You further agree that typing your full name below (hereafter referred to as your \"E-Signature\") is as valid as if you signed the document in writing.");
		a.PoliciesDefaultTermCheckbox().click();
		a.PoliciesTypeFullName().sendKeys("Anne Hathaway");
		a.SaveAndContinue4().click();
		Assert.assertEquals(a.confirmFirstName().getText(), "Isabella");
		Assert.assertEquals(a.confirmLastName().getText(), "Fanning");
		Assert.assertEquals(a.confirmEmail().getText(), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.confirmPhoneNo().getText(), "4825434121");
		Assert.assertEquals(a.confirmAddress().getText(), "Highland Street 120");
		Assert.assertEquals(a.confirmEFirstName().getText(), "Emma");
		Assert.assertEquals(a.confirmELastName().getText(), "Fanning");
		Assert.assertEquals(a.confirmEEmail().getText(), "emma.fanning@gmail.com");
		Assert.assertEquals(a.confirmEPhoneNo().getText(), "4253453412");
		Assert.assertEquals(a.confirmERelationship().getText(), "Sister");
		Assert.assertEquals(a.actualGrandTotalName_ClassAndMem().getText(), "Grand Total");
		Assert.assertEquals(a.actualGrandTotalAmount_ClassAndMem().getText(), "$3.50");
		a.promoCode().sendKeys("yog247");
		a.promoCodeApply().click();
		Assert.assertEquals(a.promoCodeAppliedMessage().getText(), "Your promo code has been applied successfully!");
		Assert.assertEquals(a.promoCodeName_ClassAndMem().getText(), "Promo-(yog247)");
		Assert.assertEquals(a.promoCodeAmount_ClassAndMem().getText(), "-$0.50");
		Assert.assertEquals(a.grandTotalName_ClassAndMem_AfterDiscount().getText(), "Grand Total");
		Assert.assertEquals(a.grandTotalAmount_ClassAndMem_AfterDiscount().getText(), "$3.00");
		a.sameAsClientDetails().click();
		Assert.assertEquals(a.cardHolderFirstName().getAttribute("value"), "Isabella");
		Assert.assertEquals(a.cardHolderLastName().getAttribute("value"), "Fanning");
		Assert.assertEquals(a.cardHolderEmail().getAttribute("value"), "jyoti.kharatmol+"+randomInt+"@azularc.com");
		Assert.assertEquals(a.cardHolderAddress().getAttribute("value"), "Highland Street 120");
		Assert.assertEquals(a.cardHolderCity().getAttribute("value"), "Atlanta");
		Assert.assertEquals(a.cardHolderZip().getAttribute("value"), "30303");	
		a.EnterCreditCardNo().sendKeys("378282246310005");
		a.EnterExpiryDate().sendKeys("0224");
		a.EnterCVV().sendKeys("4391");
		a.agreeToChargeMonthlyCheckbox().click();
		a.Confirm_pay().click();
		Assert.assertEquals(a.AccountCreationSuccessfulMessage().getText(),"Congratulations! Your account has been created.");
		a.Login_afterPay().click();
		a.clientUsername().sendKeys("jyoti.kharatmol+"+randomInt+"@azularc.com");
		a.clientPassword().sendKeys("Password@3");
		a.clientLogin().click();
		a.SessionOnCalendar().click();
		a.sessionSignUp().click();
		Assert.assertEquals(a.sessionSignedUpMessage().getText(), "You have been registered for this session!");
		Assert.assertTrue(a.cancelSession().isDisplayed());
		Assert.assertTrue(a.sessionModalShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.sessionOnCalendarShownWith_GreenCheckMark().isDisplayed());
		Assert.assertTrue(a.packageStatus().getText().contains("1/"));	
	}	
	
	@AfterMethod
	public void tearDown()
	{
		driver.close();
	}

	
}
